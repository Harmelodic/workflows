# $schema: https://www.schemastore.org/github-workflow.json
name: release-terraform

# Ideally a dedicated CD system, like Atlantis, would actually apply (release).

on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string
        description: Path to directory that contains the directory.
      workspace:
        required: false
        type: string
        description: The Terraform workspace to use.
        default: default

jobs:
  terraform-apply:
    permissions:
      contents: 'read'
      id-token: 'write' # Fetch OIDC Token for GCP Auth
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
      - uses: google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f # v2
        with:
          workload_identity_provider: projects/401363556022/locations/global/workloadIdentityPools/github/providers/github-oidc
          service_account: automation@automation-220928.iam.gserviceaccount.com
      - run: terraform -chdir=${{ inputs.directory }} init -upgrade
      - run: terraform -chdir=${{ inputs.directory }} validate
      - run: terraform -chdir=${{ inputs.directory }} workspace select -or-create ${{ inputs.workspace }}
      - run: terraform -chdir=${{ inputs.directory }} apply -var-file="${{ inputs.workspace }}.tfvars" -auto-approve
